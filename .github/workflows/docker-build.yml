name: Docker Build and Deploy

on:
  push:
    branches: [main]
    paths: ["docker/**", "ansible/**"]
  pull_request:
    branches: [main]
    paths: ["docker/**"]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Flarum image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/flarum
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push MySQL image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/mysql
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-mysql:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # security-scan:
  #   name: Security Scan
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #
  #   - name: Run Trivy vulnerability scanner
  #     uses: aquasecurity/trivy-action@master
  #     with:
  #       image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
  #       format: 'sarif'
  #       output: 'trivy-results.sarif'
  #
  #   - name: Upload Trivy scan results to GitHub Security tab
  #     uses: github/codeql-action/upload-sarif@v3
  #     if: always()
  #     with:
  #       sarif_file: 'trivy-results.sarif'

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display deployment info
        run: |
          echo "Docker images built and pushed successfully!"
          echo "Deployment will be handled by main.yml workflow"
